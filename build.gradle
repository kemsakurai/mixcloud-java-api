// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin : 'maven-publish'
apply from : 'local.gradle'

def defaultEncoding = 'UTF-8'
def jdkVersion = '1.8'

group = "xyz.monotalk.social"
archivesBaseName = "mixcloud"
version = '0.0.1'

configurations {
    provided
}

sourceSets {
    main { compileClasspath += configurations.provided }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.apache.httpcomponents:httpclient:4.3.6'
    compile 'org.apache.httpcomponents:httpmime:4.5.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.5.+'
    compile 'org.slf4j:slf4j-api:1.7.7'
    
    provided 'org.projectlombok:lombok:1.16.8'
    
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

// zip sources
task sourceJar(type : Jar) {
    from sourceSets.main.allJava
}

// zip javadocs
task javadocJar(type : Jar, dependsOn : javadoc) {
    from javadoc.destinationDir
}

// publishing description
publishing {
    publications {
        dropwizardLsCommand(MavenPublication) {
            from components.java
            artifact sourceJar {
                classifier = 'sources'
                extension  = 'jar'
            }
            artifact javadocJar {
                classifier = 'javadoc'
                extension  = 'jar'
            }
        }
    }
    repositories {
        maven {
            url = "${repositoryUrl}"
        }
    }
}

test {
    testLogging {
        showStandardStreams = true
        exceptionFormat 'full'
        events 'started', 'skipped', 'passed', 'failed'
    }
}

